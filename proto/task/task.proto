syntax = "proto3";
package task;
option go_package = "github.com/soso4ek99/project-protos/proto/task"; // Указываем пакет Go, в котором будет сгенерирован код

// Сущность задача
message Task {
  uint32 id      = 1;       // Уникальный идентификатор задачи
  uint32 userId  = 2;       // ID пользователя, которому принадлежит задача
  string title   = 3;       // Заголовок задачи
  string description = 4;  // Описание задачи
  bool   isDone  = 5;       // Статус выполнения задачи (true = выполнена)
}

// Запрос на создание задачи
message CreateTaskRequest {
  uint32 userId = 1;   // ID пользователя, создающего задачу
  string title = 2;    // Заголовок задачи
  string description = 3; // Описание задачи
}

// Ответ при создании задачи
message CreateTaskResponse {
  Task task = 1;  // Созданная задача
}

// Запрос на получение задачи по ID
message GetTaskRequest {
    uint32 id = 1; // ID задачи для получения
}

// Запрос на обновление задачи
message UpdateTaskRequest {
  uint32 id      = 1;       // ID задачи для обновления
  string title   = 2;       // Новый заголовок задачи
  string description = 3;  // Новое описание задачи
  bool   isDone  = 4;       // Новый статус выполнения задачи
}

// Ответ при обновлении задачи
message UpdateTaskResponse {
  Task task = 1;  // Обновленная задача
}

// Запрос на удаление задачи
message DeleteTaskRequest {
  uint32 id = 1;  // ID задачи для удаления
}

// Ответ при удалении задачи
message DeleteTaskResponse {}

// Запрос на получение списка всех задач
message ListTasksRequest {}

// Ответ при получении списка всех задач
message ListTasksResponse {
  repeated Task tasks = 1;  // Список задач
}

// Запрос на получение списка задач по ID пользователя
message ListTasksByUserRequest {
  uint32 userId = 1;  // ID пользователя, для которого нужно получить задачи
}

// Сервис для управления задачами
service TaskService {
  rpc CreateTask      (CreateTaskRequest)      returns (CreateTaskResponse);
  rpc GetTask         (GetTaskRequest)         returns (Task);
  rpc UpdateTask      (UpdateTaskRequest)      returns (UpdateTaskResponse);
  rpc DeleteTask      (DeleteTaskRequest)      returns (DeleteTaskResponse);
  rpc ListTasks       (ListTasksRequest)       returns (ListTasksResponse);
  rpc ListTasksByUser (ListTasksByUserRequest) returns (ListTasksResponse);
}